/****************************************************************************
** Meta object code from reading C++ file 'qvimshell.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "qt/qvimshell.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qvimshell.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_QVimShell_t {
    QByteArrayData data[24];
    char stringdata0[264];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_QVimShell_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_QVimShell_t qt_meta_stringdata_QVimShell = {
    {
QT_MOC_LITERAL(0, 0, 9), // "QVimShell"
QT_MOC_LITERAL(1, 10, 22), // "backgroundColorChanged"
QT_MOC_LITERAL(2, 33, 0), // ""
QT_MOC_LITERAL(3, 34, 13), // "setBackground"
QT_MOC_LITERAL(4, 48, 12), // "setCharWidth"
QT_MOC_LITERAL(5, 61, 5), // "close"
QT_MOC_LITERAL(6, 67, 10), // "closeEvent"
QT_MOC_LITERAL(7, 78, 12), // "QCloseEvent*"
QT_MOC_LITERAL(8, 91, 5), // "event"
QT_MOC_LITERAL(9, 97, 9), // "switchTab"
QT_MOC_LITERAL(10, 107, 3), // "idx"
QT_MOC_LITERAL(11, 111, 8), // "closeTab"
QT_MOC_LITERAL(12, 120, 9), // "cursorOff"
QT_MOC_LITERAL(13, 130, 8), // "cursorOn"
QT_MOC_LITERAL(14, 139, 18), // "startBlinkOffTimer"
QT_MOC_LITERAL(15, 158, 17), // "startBlinkOnTimer"
QT_MOC_LITERAL(16, 176, 18), // "PaintOperationType"
QT_MOC_LITERAL(17, 195, 8), // "CLEARALL"
QT_MOC_LITERAL(18, 204, 8), // "FILLRECT"
QT_MOC_LITERAL(19, 213, 10), // "DRAWSTRING"
QT_MOC_LITERAL(20, 224, 8), // "DRAWRECT"
QT_MOC_LITERAL(21, 233, 10), // "INVERTRECT"
QT_MOC_LITERAL(22, 244, 10), // "SCROLLRECT"
QT_MOC_LITERAL(23, 255, 8) // "DRAWSIGN"

    },
    "QVimShell\0backgroundColorChanged\0\0"
    "setBackground\0setCharWidth\0close\0"
    "closeEvent\0QCloseEvent*\0event\0switchTab\0"
    "idx\0closeTab\0cursorOff\0cursorOn\0"
    "startBlinkOffTimer\0startBlinkOnTimer\0"
    "PaintOperationType\0CLEARALL\0FILLRECT\0"
    "DRAWSTRING\0DRAWRECT\0INVERTRECT\0"
    "SCROLLRECT\0DRAWSIGN"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QVimShell[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      11,   14, // methods
       0,    0, // properties
       1,   92, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   69,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    1,   72,    2, 0x0a /* Public */,
       4,    1,   75,    2, 0x0a /* Public */,
       5,    0,   78,    2, 0x0a /* Public */,
       6,    1,   79,    2, 0x0a /* Public */,
       9,    1,   82,    2, 0x0a /* Public */,
      11,    1,   85,    2, 0x0a /* Public */,
      12,    0,   88,    2, 0x08 /* Private */,
      13,    0,   89,    2, 0x08 /* Private */,
      14,    0,   90,    2, 0x08 /* Private */,
      15,    0,   91,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void, QMetaType::QColor,    2,

 // slots: parameters
    QMetaType::Void, QMetaType::QColor,    2,
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 7,    8,
    QMetaType::Void, QMetaType::Int,   10,
    QMetaType::Void, QMetaType::Int,   10,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

 // enums: name, flags, count, data
      16, 0x0,    7,   96,

 // enum data: key, value
      17, uint(QVimShell::CLEARALL),
      18, uint(QVimShell::FILLRECT),
      19, uint(QVimShell::DRAWSTRING),
      20, uint(QVimShell::DRAWRECT),
      21, uint(QVimShell::INVERTRECT),
      22, uint(QVimShell::SCROLLRECT),
      23, uint(QVimShell::DRAWSIGN),

       0        // eod
};

void QVimShell::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        QVimShell *_t = static_cast<QVimShell *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->backgroundColorChanged((*reinterpret_cast< const QColor(*)>(_a[1]))); break;
        case 1: _t->setBackground((*reinterpret_cast< const QColor(*)>(_a[1]))); break;
        case 2: _t->setCharWidth((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 3: _t->close(); break;
        case 4: _t->closeEvent((*reinterpret_cast< QCloseEvent*(*)>(_a[1]))); break;
        case 5: _t->switchTab((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 6: _t->closeTab((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 7: _t->cursorOff(); break;
        case 8: _t->cursorOn(); break;
        case 9: _t->startBlinkOffTimer(); break;
        case 10: _t->startBlinkOnTimer(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (QVimShell::*_t)(const QColor & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QVimShell::backgroundColorChanged)) {
                *result = 0;
                return;
            }
        }
    }
}

const QMetaObject QVimShell::staticMetaObject = {
    { &QWidget::staticMetaObject, qt_meta_stringdata_QVimShell.data,
      qt_meta_data_QVimShell,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *QVimShell::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QVimShell::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_QVimShell.stringdata0))
        return static_cast<void*>(const_cast< QVimShell*>(this));
    if (!strcmp(_clname, "VimWrapper"))
        return static_cast< VimWrapper*>(const_cast< QVimShell*>(this));
    return QWidget::qt_metacast(_clname);
}

int QVimShell::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 11)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 11;
    }
    return _id;
}

// SIGNAL 0
void QVimShell::backgroundColorChanged(const QColor & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
